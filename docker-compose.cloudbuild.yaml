version: '3'

services:

    app:
        build: .
        container_name: micro-videos-app
        # entrypoint: dockerize -template ./.docker/app/.env:.env -template ./.docker/app/.env.testing:.env.testing -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
        # environment:
        #     - _DB_HOST=db
        #     - _DB_DATABASE=code_micro_videos
        #     - _DB_USERNAME=root
        #     - _DB_PASSWORD=root
        #     - _TEST_DB_DATABASE=code_micro_videos_test
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - app

    db:
        build:
            context: ./.docker/mysql
            dockerfile: Dockerfile
        container_name: micro-videos-db
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
            - ./.docker/mysql/init-db.sql:/data/application/init-db.sql
        command: --innodb-use-native-aio=0
        command: --init-file /data/application/init-db.sql
        restart: always
        tty: true
        ports:
            - "33006:3306"
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
